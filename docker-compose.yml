services:
  postgres:
    image: postgres:15
    container_name: artesanias_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - artesanias_net

  redis:
    image: redis:7
    container_name: artesanias_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - artesanias_net

  backend:
    build: ./backend
    container_name: artesanias_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - RESEND_API_KEY=re_62XWawsf_E3uF59As1Xc2C28RnLFnRcUA
      - FRONTEND_URL=https://artesaniasyco.com
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - artesanias_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    container_name: artesanias_frontend
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - artesanias_net
    environment:
      - BACKEND_HOST=http://backend:5000

  nginx:
    image: nginx:alpine
    container_name: artesanias_nginx
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./backend/uploads:/var/www/uploads
    command: /bin/sh -c "envsubst '$${DOMAIN_NAME}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - artesanias_net

networks:
  artesanias_net:
    driver: bridge

volumes:
  postgres_data: 